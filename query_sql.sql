-- Generated by the database client.
CREATE TABLE app_config(
    id SERIAL NOT NULL,
    domain text,
    mid_server_key text,
    mid_client_key text,
    mid_merchant_id text,
    mid_base_url text,
    smtp_host text,
    smtp_port text,
    smtp_email text,
    smtp_pass text,
    smtp_from text,
    smtp_name text,
    meta_pixel text,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE c_courses(
    id SERIAL NOT NULL,
    title varchar(255) NOT NULL,
    instructor text NOT NULL,
    category text NOT NULL,
    level text NOT NULL,
    duration text NOT NULL,
    price numeric NOT NULL,
    description text NOT NULL,
    thumbnail text NOT NULL,
    video_preview text NOT NULL,
    objectives text[],
    requirements text[],
    is_published boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    link_files text,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE c_lectures(
    id SERIAL NOT NULL,
    section_id integer,
    title text NOT NULL,
    description text,
    duration integer,
    video_url text,
    position integer NOT NULL,
    is_preview boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    CONSTRAINT lectures_section_id_fkey FOREIGN key(section_id) REFERENCES c_sections(id)
);

-- Generated by the database client.
CREATE TABLE c_questions(
    id integer NOT NULL,
    user_id integer NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    course_id integer NOT NULL REFERENCES c_courses(id) ON DELETE CASCADE,
    lecture_id integer NOT NULL REFERENCES c_lectures(id) ON DELETE CASCADE,
    title text NOT NULL,
    question text NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE c_quizzes(
    id SERIAL NOT NULL,
    lecture_id integer,
    title text NOT NULL,
    description text,
    passing_score integer NOT NULL,
    time_limit integer,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE c_quizzes(
    id SERIAL NOT NULL,
    lecture_id integer,
    title text NOT NULL,
    description text,
    passing_score integer NOT NULL,
    time_limit integer,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE c_responses(
    id integer NOT NULL,
    course_id integer NOT NULL REFERENCES c_courses(id) ON DELETE CASCADE,
    lecture_id integer NOT NULL REFERENCES c_lectures(id) ON DELETE CASCADE,
    question_id integer NOT NULL REFERENCES c_questions(id) ON DELETE CASCADE,
    response text NOT NULL,
    PRIMARY KEY(id)
);


-- Generated by the database client.
CREATE TABLE c_sections(
    id SERIAL NOT NULL,
    course_id integer,
    title text NOT NULL,
    description text,
    position integer NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    CONSTRAINT sections_course_id_fkey FOREIGN key(course_id) REFERENCES c_courses(id)
);


-- Generated by the database client.
CREATE TABLE cq_questions(
    id SERIAL NOT NULL,
    quiz_id integer,
    question text NOT NULL,
    question_type text NOT NULL,
    correct_answer text NOT NULL,
    options text[],
    explanation text,
    position integer NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    CONSTRAINT quiz_questions_quiz_id_fkey FOREIGN key(quiz_id) REFERENCES c_quizzes(id)
);


-- Generated by the database client.
CREATE TABLE c_reviews(
    id SERIAL NOT NULL,
    course_id integer,
    name varchar(255) NOT NULL,
    rating integer,
    comment text,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    CONSTRAINT reviews_course_id_fkey FOREIGN key(course_id) REFERENCES c_courses(id),
    CONSTRAINT reviews_rating_check CHECK (((rating >= 1) AND (rating <= 5)))
);

CREATE TABLE c_enrollments(
    id SERIAL NOT NULL,
    course_id integer REFERENCES c_courses(id) ON DELETE CASCADE,
    user_id integer REFERENCES users(id) ON DELETE CASCADE,
    status text NOT NULL,
    price numeric NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);


-- Generated by the database client.
CREATE TABLE order_items(
    id SERIAL NOT NULL,
    order_id integer,
    product_id integer,
    quantity integer NOT NULL,
    price numeric NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    CONSTRAINT order_items_order_id_fkey FOREIGN key(order_id) REFERENCES orders(id),
    CONSTRAINT order_items_product_id_fkey FOREIGN key(product_id) REFERENCES products(id)
);

-- Generated by the database client.
CREATE TABLE orders(
    id SERIAL NOT NULL,
    order_code varchar(255) NOT NULL,
    name varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    phone text NOT NULL,
    total_amount numeric NOT NULL,
    status varchar(50) DEFAULT 'pending'::character varying,
    type varchar(50) NOT NULL CHECK (type IN ('product', 'course')),
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);


-- Generated by the database client.
CREATE TABLE products(
    id SERIAL NOT NULL,
    name varchar(255) NOT NULL,
    price numeric NOT NULL,
    image_url text,
    ebook_url text,
    description text,
    status product_status DEFAULT 'active'::product_status,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

CREATE TABLE c_lecture_progress(
    id SERIAL NOT NULL,
    user_id integer REFERENCES users(id) ON DELETE CASCADE,
    lecture_id integer REFERENCES c_lectures(id) ON DELETE CASCADE,
    watch_duration integer DEFAULT 0, -- in seconds
    total_duration integer NOT NULL, -- in seconds
    is_completed boolean DEFAULT false,
    last_watched_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    UNIQUE(user_id, lecture_id)
);

-- Add index for better query performance
CREATE INDEX idx_lecture_progress_user ON c_lecture_progress(user_id);
CREATE INDEX idx_lecture_progress_lecture ON c_lecture_progress(lecture_id);