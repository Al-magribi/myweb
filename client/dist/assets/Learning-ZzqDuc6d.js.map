{"version":3,"file":"Learning-ZzqDuc6d.js","sources":["../../src/hooks/useVideoProgress.js","../../src/pages/user/learning/VideoPlayer.jsx","../../src/pages/user/learning/CourseTabs.jsx","../../src/pages/user/learning/CourseContentSidebar.jsx","../../src/pages/user/learning/utils.js","../../src/pages/user/learning/Learning.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useUpdateLectureProgressMutation } from \"../controller/api/course/ApiCourse\";\r\n\r\nconst useVideoProgress = (lectureId, totalDuration, lectureProgress) => {\r\n  const [updateLectureProgress] = useUpdateLectureProgressMutation();\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [lastSavedProgress, setLastSavedProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const lastUpdateTimeRef = useRef(0);\r\n  const intervalRef = useRef(null);\r\n\r\n  const isCompleted = lectureProgress?.is_completed === true;\r\n\r\n  const updateVideoProgress = useCallback(\r\n    async (currentTime, duration, isYoutube = false) => {\r\n      if (isCompleted) {\r\n        return;\r\n      }\r\n      try {\r\n        // Ensure both are integers\r\n        const watch_duration = Math.floor(currentTime);\r\n        const total_duration = Math.floor(duration);\r\n\r\n        if (!lectureId || !totalDuration) {\r\n          setError(\"Missing lecture ID or duration\");\r\n          return;\r\n        }\r\n\r\n        const now = Date.now();\r\n        if (now - lastUpdateTimeRef.current < 5000 && !isYoutube) {\r\n          // For YouTube, always allow update (interval handled in VideoPlayer)\r\n          return;\r\n        }\r\n\r\n        const progress = (watch_duration / total_duration) * 100;\r\n        const isCompletedCalc = progress >= 95;\r\n\r\n        const result = await updateLectureProgress({\r\n          lecture_id: lectureId,\r\n          watch_duration,\r\n          total_duration,\r\n          is_completed: isCompletedCalc,\r\n        });\r\n\r\n        lastUpdateTimeRef.current = now;\r\n        setLastSavedProgress(watch_duration);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    },\r\n    [lectureId, totalDuration, updateLectureProgress, isCompleted]\r\n  );\r\n\r\n  const startTrackingProgress = useCallback(\r\n    (videoElement) => {\r\n      if (isCompleted) {\r\n        return;\r\n      }\r\n\r\n      if (!lectureId || !totalDuration) {\r\n        setError(\"Missing lecture ID or duration\");\r\n        return;\r\n      }\r\n\r\n      setIsTracking(true);\r\n      setError(null);\r\n\r\n      // If it's a YouTube video, do nothing (handled in VideoPlayer)\r\n      if (typeof videoElement === \"object\" && videoElement.isYoutube) {\r\n        return () => {\r\n          if (intervalRef.current) {\r\n            clearInterval(intervalRef.current);\r\n          }\r\n        };\r\n      }\r\n\r\n      // For regular video elements\r\n      if (!videoElement || !(videoElement instanceof HTMLVideoElement)) {\r\n        setError(\"Invalid video element\");\r\n        return;\r\n      }\r\n\r\n      const handleTimeUpdate = () => {\r\n        if (videoElement.paused) return;\r\n        updateVideoProgress(videoElement.currentTime, videoElement.duration);\r\n      };\r\n\r\n      const handlePause = () => {\r\n        updateVideoProgress(videoElement.currentTime, videoElement.duration);\r\n      };\r\n\r\n      const handleSeeked = () => {\r\n        updateVideoProgress(videoElement.currentTime, videoElement.duration);\r\n      };\r\n\r\n      const handleEnded = () => {\r\n        updateVideoProgress(videoElement.duration, videoElement.duration);\r\n      };\r\n\r\n      videoElement.addEventListener(\"timeupdate\", handleTimeUpdate);\r\n      videoElement.addEventListener(\"pause\", handlePause);\r\n      videoElement.addEventListener(\"seeked\", handleSeeked);\r\n      videoElement.addEventListener(\"ended\", handleEnded);\r\n\r\n      // Set up interval for regular updates\r\n      intervalRef.current = setInterval(() => {\r\n        if (!videoElement.paused) {\r\n          updateVideoProgress(videoElement.currentTime, videoElement.duration);\r\n        }\r\n      }, 5000);\r\n\r\n      return () => {\r\n        videoElement.removeEventListener(\"timeupdate\", handleTimeUpdate);\r\n        videoElement.removeEventListener(\"pause\", handlePause);\r\n        videoElement.removeEventListener(\"seeked\", handleSeeked);\r\n        videoElement.removeEventListener(\"ended\", handleEnded);\r\n        if (intervalRef.current) {\r\n          clearInterval(intervalRef.current);\r\n        }\r\n        setIsTracking(false);\r\n      };\r\n    },\r\n    [lectureId, totalDuration, updateVideoProgress, isCompleted]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    startTrackingProgress,\r\n    updateVideoProgress,\r\n    isTracking,\r\n    lastSavedProgress,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useVideoProgress;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport useVideoProgress from \"../../../hooks/useVideoProgress\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useGetLectureProgressQuery } from \"../../../controller/api/course/ApiCourse\";\r\n\r\nconst getYoutubeEmbedUrl = (url) => {\r\n  // Mendukung format youtu.be/xxxx dan youtube.com/watch?v=xxxx\r\n  const match = url.match(\r\n    /(?:youtu\\.be\\/|youtube\\.com\\/(?:watch\\?v=|embed\\/))([\\w-]{11})/\r\n  );\r\n  return match ? `https://www.youtube.com/embed/${match[1]}` : null;\r\n};\r\n\r\nconst formatTime = (seconds) => {\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = Math.floor(seconds % 60);\r\n  return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n};\r\n\r\nconst VideoPlayer = ({ lecture }) => {\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const videoRef = useRef(null);\r\n  const youtubePlayerRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isBuffering, setIsBuffering] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isYoutube, setIsYoutube] = useState(false);\r\n\r\n  const { data: lectureProgress, isLoading: isLoadingProgress } =\r\n    useGetLectureProgressQuery(lecture?.id, {\r\n      skip: !lecture?.id,\r\n    });\r\n\r\n  const {\r\n    startTrackingProgress,\r\n    updateVideoProgress,\r\n    isTracking,\r\n    lastSavedProgress,\r\n    error: trackingError,\r\n  } = useVideoProgress(lecture?.id, lecture?.duration, lectureProgress);\r\n\r\n  const isCompleted = lectureProgress?.is_completed === true;\r\n\r\n  // Reset states when lecture changes\r\n  useEffect(() => {\r\n    setCurrentTime(0);\r\n    setDuration(0);\r\n    setProgress(0);\r\n    setIsBuffering(false);\r\n    setError(null);\r\n    setIsYoutube(false);\r\n\r\n    // Cleanup YouTube player if it exists\r\n    if (youtubePlayerRef.current) {\r\n      youtubePlayerRef.current.destroy();\r\n      youtubePlayerRef.current = null;\r\n    }\r\n  }, [lecture?.id]);\r\n\r\n  useEffect(() => {\r\n    if (trackingError) {\r\n      setError(trackingError);\r\n    }\r\n  }, [trackingError]);\r\n\r\n  // Initialize YouTube Player\r\n  useEffect(() => {\r\n    if (lecture?.video_url?.includes(\"youtu\")) {\r\n      setIsYoutube(true);\r\n      let ytInterval = null;\r\n      const createPlayer = () => {\r\n        const embedUrl = getYoutubeEmbedUrl(lecture.video_url);\r\n        if (embedUrl) {\r\n          if (youtubePlayerRef.current) {\r\n            youtubePlayerRef.current.destroy();\r\n            youtubePlayerRef.current = null;\r\n          }\r\n          youtubePlayerRef.current = new window.YT.Player(\"youtube-player\", {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            videoId: embedUrl.split(\"/\").pop(),\r\n            playerVars: {\r\n              playsinline: 1,\r\n              controls: 1,\r\n              rel: 0,\r\n            },\r\n            events: {\r\n              onReady: (event) => {\r\n                const dur = event.target.getDuration();\r\n                setDuration(dur);\r\n                if (lectureProgress?.watch_duration) {\r\n                  event.target.seekTo(lectureProgress.watch_duration);\r\n                  setCurrentTime(lectureProgress.watch_duration);\r\n                  setProgress((lectureProgress.watch_duration / dur) * 100);\r\n                }\r\n              },\r\n              onStateChange: (event) => {\r\n                if (event.data === window.YT.PlayerState.PLAYING) {\r\n                  setIsBuffering(false);\r\n                  // Start interval for progress update\r\n                  if (ytInterval) clearInterval(ytInterval);\r\n                  if (!isCompleted) {\r\n                    ytInterval = setInterval(() => {\r\n                      if (youtubePlayerRef.current) {\r\n                        const ct = youtubePlayerRef.current.getCurrentTime();\r\n                        const dur = youtubePlayerRef.current.getDuration();\r\n                        setCurrentTime(ct);\r\n                        setProgress((ct / dur) * 100);\r\n                        updateVideoProgress(ct, dur, true);\r\n                      }\r\n                    }, 5000);\r\n                  }\r\n                } else if (event.data === window.YT.PlayerState.PAUSED) {\r\n                  if (ytInterval) clearInterval(ytInterval);\r\n                  if (youtubePlayerRef.current && !isCompleted) {\r\n                    const ct = youtubePlayerRef.current.getCurrentTime();\r\n                    const dur = youtubePlayerRef.current.getDuration();\r\n                    updateVideoProgress(ct, dur, true);\r\n                  }\r\n                } else if (event.data === window.YT.PlayerState.ENDED) {\r\n                  if (ytInterval) clearInterval(ytInterval);\r\n                  if (youtubePlayerRef.current && !isCompleted) {\r\n                    const dur = youtubePlayerRef.current.getDuration();\r\n                    updateVideoProgress(dur, dur, true);\r\n                  }\r\n                } else if (event.data === window.YT.PlayerState.BUFFERING) {\r\n                  setIsBuffering(true);\r\n                }\r\n              },\r\n              onError: (error) => {\r\n                setError(\"Error playing YouTube video\");\r\n              },\r\n            },\r\n          });\r\n        }\r\n      };\r\n      if (window.YT && window.YT.Player) {\r\n        createPlayer();\r\n      } else {\r\n        // Load YouTube IFrame API if not loaded\r\n        const tag = document.createElement(\"script\");\r\n        tag.src = \"https://www.youtube.com/iframe_api\";\r\n        const firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        window.onYouTubeIframeAPIReady = createPlayer;\r\n      }\r\n      return () => {\r\n        if (ytInterval) clearInterval(ytInterval);\r\n        if (youtubePlayerRef.current) {\r\n          youtubePlayerRef.current.destroy();\r\n          youtubePlayerRef.current = null;\r\n        }\r\n      };\r\n    }\r\n  }, [lecture?.video_url, lectureProgress, updateVideoProgress, isCompleted]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      videoRef.current &&\r\n      lecture?.id &&\r\n      lecture?.video_url &&\r\n      !lecture.video_url.includes(\"youtu\") &&\r\n      lecture?.duration\r\n    ) {\r\n      console.log(\r\n        \"[VideoPlayer] Start tracking progress for\",\r\n        lecture?.id,\r\n        lecture?.title\r\n      );\r\n      const cleanup = startTrackingProgress(videoRef.current);\r\n      return cleanup;\r\n    }\r\n  }, [\r\n    startTrackingProgress,\r\n    lecture?.id,\r\n    lecture?.video_url,\r\n    lecture?.duration,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (lectureProgress && !isYoutube && videoRef.current) {\r\n      videoRef.current.currentTime = lectureProgress.watch_duration;\r\n      setCurrentTime(lectureProgress.watch_duration);\r\n      setProgress(\r\n        (lectureProgress.watch_duration / lectureProgress.total_duration) * 100\r\n      );\r\n    }\r\n  }, [lectureProgress, isYoutube]);\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (videoRef.current) {\r\n      const newTime = videoRef.current.currentTime;\r\n      const newProgress = (newTime / videoRef.current.duration) * 100;\r\n      setCurrentTime(newTime);\r\n      setProgress(newProgress);\r\n    }\r\n  };\r\n\r\n  const handleLoadedMetadata = () => {\r\n    if (videoRef.current) {\r\n      const videoDuration = videoRef.current.duration;\r\n      setDuration(videoDuration);\r\n    }\r\n  };\r\n\r\n  const handleWaiting = () => {\r\n    setIsBuffering(true);\r\n  };\r\n\r\n  const handlePlaying = () => {\r\n    setIsBuffering(false);\r\n  };\r\n\r\n  if (!lecture) {\r\n    return (\r\n      <div\r\n        className=\"video-container position-relative bg-dark\"\r\n        style={{ minHeight: 500 }}\r\n      >\r\n        <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n          <span className=\"text-white\">No lecture selected</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!lecture.video_url) {\r\n    return (\r\n      <div\r\n        className=\"video-container position-relative bg-dark\"\r\n        style={{ minHeight: 400 }}\r\n      >\r\n        <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n          <span className=\"text-white\">\r\n            No video available for this lecture\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Jika YouTube\r\n  if (lecture.video_url.includes(\"youtu\")) {\r\n    const embedUrl = getYoutubeEmbedUrl(lecture.video_url);\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"video-container position-relative bg-dark\"\r\n          style={{ minHeight: 500, height: 500 }}\r\n        >\r\n          <div\r\n            id=\"youtube-player\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          ></div>\r\n        </div>\r\n        {/* Progress Information BELOW video */}\r\n        <div className=\"bg-dark bg-opacity-75 p-2 mt-0\">\r\n          <div className=\"d-flex justify-content-between align-items-center text-white mb-1\">\r\n            <small>\r\n              {formatTime(currentTime)} / {formatTime(duration)}\r\n            </small>\r\n            <small>\r\n              {isCompleted ? (\r\n                <span className=\"text-success\">Completed!</span>\r\n              ) : isBuffering ? (\r\n                <span className=\"text-warning\">Buffering...</span>\r\n              ) : (\r\n                `${Math.round(progress)}% watched`\r\n              )}\r\n            </small>\r\n          </div>\r\n          <div className=\"progress\" style={{ height: \"4px\" }}>\r\n            <div\r\n              className={`progress-bar ${\r\n                isCompleted ? \"bg-success\" : \"bg-primary\"\r\n              }`}\r\n              role=\"progressbar\"\r\n              style={{ width: `${progress}%` }}\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n            ></div>\r\n          </div>\r\n          {isTracking && !isCompleted && (\r\n            <small className=\"text-success d-block mt-1\">\r\n              Progress is being saved...\r\n            </small>\r\n          )}\r\n          {error && (\r\n            <small className=\"text-danger d-block mt-1\">Error: {error}</small>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // Jika file video langsung\r\n  // Render hanya jika video_url valid\r\n  if (lecture.video_url) {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"video-container position-relative bg-dark\"\r\n          style={{ minHeight: 400, height: 400 }}\r\n        >\r\n          <video\r\n            ref={videoRef}\r\n            key={lecture.id}\r\n            className=\"w-100 h-100\"\r\n            controls\r\n            playsInline\r\n            controlsList=\"nodownload\"\r\n            style={{ objectFit: \"contain\", height: 400 }}\r\n            onTimeUpdate={handleTimeUpdate}\r\n            onLoadedMetadata={handleLoadedMetadata}\r\n            onWaiting={handleWaiting}\r\n            onPlaying={handlePlaying}\r\n          >\r\n            <source src={lecture.video_url} type=\"video/mp4\" />\r\n            Your browser does not support the video tag.\r\n          </video>\r\n        </div>\r\n        {/* Progress Information BELOW video */}\r\n        <div className=\"bg-dark bg-opacity-75 p-2 mt-0\">\r\n          <div className=\"d-flex justify-content-between align-items-center text-white mb-1\">\r\n            <small>\r\n              {formatTime(currentTime)} / {formatTime(duration)}\r\n            </small>\r\n            <small>\r\n              {isCompleted ? (\r\n                <span className=\"text-success\">Completed!</span>\r\n              ) : isBuffering ? (\r\n                <span className=\"text-warning\">Buffering...</span>\r\n              ) : (\r\n                `${Math.round(progress)}% watched`\r\n              )}\r\n            </small>\r\n          </div>\r\n          <div className=\"progress\" style={{ height: \"4px\" }}>\r\n            <div\r\n              className={`progress-bar ${\r\n                isCompleted ? \"bg-success\" : \"bg-primary\"\r\n              }`}\r\n              role=\"progressbar\"\r\n              style={{ width: `${progress}%` }}\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n            ></div>\r\n          </div>\r\n          {isTracking && !isCompleted && (\r\n            <small className=\"text-success d-block mt-1\">\r\n              Progress is being saved...\r\n            </small>\r\n          )}\r\n          {error && (\r\n            <small className=\"text-danger d-block mt-1\">Error: {error}</small>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // Fallback jika tidak ada video_url\r\n  return (\r\n    <div\r\n      className=\"video-container position-relative bg-dark\"\r\n      style={{ minHeight: 400 }}\r\n    >\r\n      <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n        <span className=\"text-white\">No video available</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React from \"react\";\r\n\r\nconst CourseTabs = ({ TABS, activeTab, setActiveTab, renderTabContent }) => (\r\n  <>\r\n    <ul\r\n      className='nav nav-tabs px-4 border-bottom'\r\n      style={{ background: \"#fff\" }}\r\n    >\r\n      {TABS.map((tab) => (\r\n        <li className='nav-item' key={tab.key}>\r\n          <button\r\n            className={`nav-link ${activeTab === tab.key ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(tab.key)}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {tab.label}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    <div\r\n      style={{ background: \"#fff\", minHeight: 300, borderBottomLeftRadius: 8 }}\r\n    >\r\n      {renderTabContent()}\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default CourseTabs;\r\n","import React from \"react\";\r\n\r\nconst CourseContentSidebar = ({\r\n  sections,\r\n  expandedSection,\r\n  setExpandedSection,\r\n  selectedLecture,\r\n  setSelectedLecture,\r\n  formatDuration,\r\n  lectureProgressMap = {}, // new prop: { [lectureId]: { is_completed: true/false, ... } }\r\n}) => (\r\n  <div\r\n    className=\"p-0 h-100 bg-white border-start\"\r\n    style={{ maxHeight: \"100vh\" }}\r\n  >\r\n    <div className=\"px-4 pt-4 pb-2 border-bottom\">\r\n      <span className=\"fw-bold fs-6\">Course content</span>\r\n    </div>\r\n    <div className=\"overflow-auto\" style={{ maxHeight: \"calc(100vh - 60px)\" }}>\r\n      {sections.map((section, sectionIdx) => {\r\n        // Hitung total durasi section (dalam detik)\r\n        const totalSectionDuration = section.lectures.reduce(\r\n          (acc, lec) => acc + (lec.duration || 0),\r\n          0\r\n        );\r\n        // Hitung jumlah lecture selesai di section ini\r\n        const completedCount = section.lectures.filter(\r\n          (lec) => lectureProgressMap[lec.id]?.is_completed === true\r\n        ).length;\r\n        return (\r\n          <div key={section.id} className=\"border-bottom\">\r\n            {/* Section Header */}\r\n            <div\r\n              className=\"d-flex align-items-center justify-content-between px-4 py-3 bg-white section-title\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() =>\r\n                setExpandedSection(\r\n                  expandedSection === section.id ? null : section.id\r\n                )\r\n              }\r\n            >\r\n              <div className=\"d-flex flex-column\">\r\n                <div className=\"fw-bold\">\r\n                  {`Section ${sectionIdx + 1}: ${section.title}`}\r\n                </div>\r\n\r\n                <span className=\"small text-muted\">\r\n                  {`${completedCount} / ${\r\n                    section.lectures.length\r\n                  } | ${formatDuration(totalSectionDuration)}`}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"d-flex align-items-center gap-3\">\r\n                <i\r\n                  className={`bi ${\r\n                    expandedSection === section.id\r\n                      ? \"bi-chevron-up\"\r\n                      : \"bi-chevron-down\"\r\n                  } text-muted`}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n            {/* Lectures List */}\r\n            <ul\r\n              className={`list-group list-group-flush ${\r\n                expandedSection === section.id ? \"show\" : \"collapse\"\r\n              }`}\r\n            >\r\n              {section.lectures.map((lecture, idx) => {\r\n                const progress = lectureProgressMap[lecture.id];\r\n                const isCompleted = progress?.is_completed === true;\r\n                return (\r\n                  <li\r\n                    key={lecture.id}\r\n                    className={`list-group-item d-flex align-items-center justify-content-between px-4 py-2 border-0 ${\r\n                      selectedLecture?.id === lecture.id\r\n                        ? \"bg-primary bg-opacity-10 text-primary\"\r\n                        : \"bg-transparent\"\r\n                    }`}\r\n                    style={{ cursor: \"pointer\", borderRadius: 0 }}\r\n                    onClick={() => setSelectedLecture(lecture)}\r\n                  >\r\n                    <div className=\"d-flex align-items-center gap-2 flex-grow-1\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input me-2\"\r\n                        style={{ pointerEvents: \"none\" }}\r\n                        checked={isCompleted}\r\n                        readOnly\r\n                      />\r\n                      <span className=\"small text-muted\">{idx + 1}.</span>\r\n                      <span className=\"small fw-semibold ms-1\">\r\n                        {lecture.title}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      {/* Resource button jika ada resource, contoh: */}\r\n                      {lecture.resources && lecture.resources.length > 0 && (\r\n                        <div className=\"dropdown\">\r\n                          <button\r\n                            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                          >\r\n                            Resources\r\n                          </button>\r\n                          <ul className=\"dropdown-menu\">\r\n                            {lecture.resources.map((res, i) => (\r\n                              <li key={i}>\r\n                                <a\r\n                                  className=\"dropdown-item\"\r\n                                  href={res.url}\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                >\r\n                                  {res.name}\r\n                                </a>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                      <span className=\"small text-muted ms-2\">\r\n                        {formatDuration(lecture.duration)}\r\n                      </span>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CourseContentSidebar;\r\n","export const getYoutubeId = (url) => {\r\n  if (!url) return null;\r\n  const regExp =\r\n    /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#&?]*).*/;\r\n  const match = url.match(regExp);\r\n  return match && match[2].length === 11 ? match[2] : null;\r\n};\r\n\r\nexport const formatDuration = (totalSeconds) => {\r\n  if (\r\n    typeof totalSeconds !== \"number\" ||\r\n    isNaN(totalSeconds) ||\r\n    totalSeconds < 0\r\n  )\r\n    return \"00:00\";\r\n  const hours = Math.floor(totalSeconds / 3600);\r\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n  const seconds = totalSeconds % 60;\r\n\r\n  if (hours > 0) {\r\n    // Format: h:mm:ss\r\n    return `${hours}:${minutes.toString().padStart(2, \"0\")}:${seconds\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  } else {\r\n    // Format: mm:ss\r\n    return `${minutes.toString().padStart(2, \"0\")}:${seconds\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  }\r\n};\r\n\r\nexport const formatPrice = (price) => {\r\n  return new Intl.NumberFormat(\"id-ID\", {\r\n    style: \"currency\",\r\n    currency: \"IDR\",\r\n  }).format(price);\r\n};\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  useGetCourseByIdQuery,\r\n  useGetAllLectureProgressQuery,\r\n} from \"../../../controller/api/course/ApiCourse\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport CourseTabs from \"./CourseTabs\";\r\nimport CourseContentSidebar from \"./CourseContentSidebar\";\r\nimport { getYoutubeId, formatDuration, formatPrice } from \"./utils\";\r\n\r\nconst TABS = [\r\n  { key: \"overview\", label: \"Overview\" },\r\n  { key: \"qa\", label: \"Q&A\" },\r\n  { key: \"notes\", label: \"Notes\" },\r\n  // Add more tabs if needed\r\n];\r\n\r\nconst Learning = () => {\r\n  const { id } = useParams();\r\n  const { data, isLoading, error } = useGetCourseByIdQuery(id);\r\n  const { data: allLectureProgress, isLoading: isLoadingProgress } =\r\n    useGetAllLectureProgressQuery(id);\r\n  const [selectedLecture, setSelectedLecture] = useState(null);\r\n  const [expandedSection, setExpandedSection] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n\r\n  // Build lectureProgressMap: { [lectureId]: progressObj }\r\n  const lectureProgressMap = useMemo(() => {\r\n    if (!allLectureProgress) return {};\r\n    const map = {};\r\n    allLectureProgress.forEach((p) => {\r\n      map[p.lecture_id] = p;\r\n    });\r\n    return map;\r\n  }, [allLectureProgress]);\r\n\r\n  if (isLoading)\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center min-vh-100\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (error)\r\n    return (\r\n      <div className=\"alert alert-danger m-5 text-center\" role=\"alert\">\r\n        Error loading course content\r\n      </div>\r\n    );\r\n\r\n  if (!data) return null;\r\n\r\n  // Find the first lecture for initial video\r\n  let firstLecture = null;\r\n  for (const section of data.sections) {\r\n    if (section.lectures && section.lectures.length > 0) {\r\n      firstLecture = section.lectures[0];\r\n      break;\r\n    }\r\n  }\r\n  const currentLecture = selectedLecture || firstLecture;\r\n  const currentVideoId = getYoutubeId(\r\n    currentLecture?.video_url || data.video_preview\r\n  );\r\n\r\n  // Dummy tab content\r\n  const renderTabContent = () => {\r\n    if (activeTab === \"overview\") {\r\n      return (\r\n        <div className=\"p-4\">\r\n          <h5 className=\"fw-bold mb-3\">{data.title}</h5>\r\n          <div className=\"mb-2\">\r\n            <span className=\"badge bg-secondary me-2\">{data.category}</span>\r\n            <span className=\"badge bg-info\">{data.level}</span>\r\n          </div>\r\n          <div className=\"mb-2 text-muted\">\r\n            <i className=\"bi bi-person-circle me-2\"></i>\r\n            {data.instructor}\r\n          </div>\r\n          <div className=\"mb-2 text-muted\">\r\n            <i className=\"bi bi-clock me-2\"></i>\r\n            {formatDuration(data.duration)}\r\n          </div>\r\n          <div className=\"mb-2 text-muted\">\r\n            <i className=\"bi bi-currency-dollar me-2\"></i>\r\n            {formatPrice(data.price)}\r\n          </div>\r\n          <div\r\n            className=\"mt-3 text-muted\"\r\n            dangerouslySetInnerHTML={{ __html: data.description }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (activeTab === \"qa\") {\r\n      return (\r\n        <div className=\"p-4\">\r\n          <h5 className=\"fw-bold mb-3\">Q&amp;A</h5>\r\n          <div className=\"mb-3\">\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Search all course questions\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-wrap gap-2 mb-3\">\r\n            <select className=\"form-select w-auto\">\r\n              <option>All lectures</option>\r\n            </select>\r\n            <select className=\"form-select w-auto\">\r\n              <option>Sort by recommended</option>\r\n            </select>\r\n            <button className=\"btn btn-outline-primary\">\r\n              Filter questions\r\n            </button>\r\n          </div>\r\n          <div className=\"mt-4\">\r\n            <div className=\"fw-bold mb-2\">All questions in this course (0)</div>\r\n            <div className=\"text-muted\">No questions yet.</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (activeTab === \"notes\") {\r\n      return (\r\n        <div className=\"p-4\">\r\n          <h5 className=\"fw-bold mb-3\">Notes</h5>\r\n          <div className=\"text-muted\">No notes yet.</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 bg-light\">\r\n      <title>{data.title}</title>\r\n      <meta name=\"description\" content={data.description} />\r\n      <div className=\"bg-dark bg-opacity-75 d-flex justify-content-between align-items-center py-2 px-4\">\r\n        <h6 className=\"m-0 text-white\">{data.title}</h6>\r\n\r\n        <div className=\"d-flex align-items-center gap-2\">\r\n          <button\r\n            className=\"btn btn-outline-light\"\r\n            onClick={() => (window.location.href = \"/user-learning\")}\r\n          >\r\n            <i className=\"bi bi-house me-2\"></i>\r\n            Dashboard\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row g-0\">\r\n        {/* Left: Video Player & Tabs */}\r\n        <div\r\n          className=\"col-lg-8 p-0\"\r\n          style={{ minHeight: \"100vh\", background: \"#fff\" }}\r\n        >\r\n          {/* Video Player */}\r\n          <VideoPlayer lecture={selectedLecture} />\r\n\r\n          {/* Tabs */}\r\n          <CourseTabs\r\n            TABS={TABS}\r\n            activeTab={activeTab}\r\n            setActiveTab={setActiveTab}\r\n            renderTabContent={renderTabContent}\r\n          />\r\n        </div>\r\n\r\n        {/* Right: Course Content */}\r\n        <div\r\n          className=\"col-lg-4 bg-light p-0\"\r\n          style={{ minHeight: \"100vh\", position: \"sticky\", top: 0, zIndex: 2 }}\r\n        >\r\n          <CourseContentSidebar\r\n            sections={data.sections}\r\n            expandedSection={expandedSection}\r\n            setExpandedSection={setExpandedSection}\r\n            selectedLecture={selectedLecture}\r\n            setSelectedLecture={setSelectedLecture}\r\n            formatDuration={formatDuration}\r\n            lectureProgressMap={lectureProgressMap}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learning;\r\n"],"names":["getYoutubeEmbedUrl","url","match","formatTime","seconds","Math","floor","toString","padStart","VideoPlayer","lecture","user","useSelector","state","auth","videoRef","useRef","youtubePlayerRef","currentTime","setCurrentTime","useState","duration","setDuration","progress","setProgress","isBuffering","setIsBuffering","error","setError","isYoutube","setIsYoutube","data","lectureProgress","isLoading","isLoadingProgress","useGetLectureProgressQuery","id","skip","startTrackingProgress","updateVideoProgress","isTracking","trackingError","lectureId","totalDuration","updateLectureProgress","useUpdateLectureProgressMutation","setIsTracking","lastSavedProgress","setLastSavedProgress","lastUpdateTimeRef","intervalRef","isCompleted","is_completed","useCallback","async","watch_duration","total_duration","now","Date","current","isCompletedCalc","lecture_id","err","message","videoElement","clearInterval","HTMLVideoElement","handleTimeUpdate","paused","handlePause","handleSeeked","handleEnded","addEventListener","setInterval","removeEventListener","useEffect","useVideoProgress","destroy","_a","video_url","includes","ytInterval","createPlayer","embedUrl","window","YT","Player","height","width","videoId","split","pop","playerVars","playsinline","controls","rel","events","onReady","event","dur","target","getDuration","seekTo","onStateChange","PlayerState","PLAYING","ct","getCurrentTime","PAUSED","ENDED","BUFFERING","onError","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","console","log","title","newTime","newProgress","handleLoadedMetadata","videoDuration","handleWaiting","handlePlaying","jsxRuntimeExports","jsxs","Fragment","children","jsx","className","style","minHeight","round","role","ref","playsInline","controlsList","objectFit","onTimeUpdate","onLoadedMetadata","onWaiting","onPlaying","type","CourseTabs","TABS","activeTab","setActiveTab","renderTabContent","background","map","tab","key","onClick","cursor","label","borderBottomLeftRadius","CourseContentSidebar","sections","expandedSection","setExpandedSection","selectedLecture","setSelectedLecture","formatDuration","lectureProgressMap","maxHeight","section","sectionIdx","totalSectionDuration","lectures","reduce","acc","lec","completedCount","filter","length","idx","borderRadius","pointerEvents","checked","readOnly","resources","res","i","href","name","totalSeconds","isNaN","hours","minutes","Learning","useParams","useGetCourseByIdQuery","allLectureProgress","useGetAllLectureProgressQuery","useMemo","forEach","p","firstLecture","currentLecture","getYoutubeId","video_preview","content","description","location","category","level","instructor","price","Intl","NumberFormat","currency","format","dangerouslySetInnerHTML","__html","placeholder","position","top","zIndex"],"mappings":"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"}